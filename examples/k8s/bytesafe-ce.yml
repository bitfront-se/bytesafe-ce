apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  replicas: 1
  serviceName: postgres
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-password
          volumeMounts:
            - name: bytesafe-postgres-data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - |
                  pg_isready -U postgres -h localhost -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: bytesafe-postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:6
          command: ["redis-server"]
          ports:
            - containerPort: 6379
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - |
                  redis-cli --raw incr ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres
  clusterIP: None

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
spec:
  clusterIP: None
  ports:
  - name: redis
    port: 6379
  selector:
    app: redis


---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bytesafe-ce
spec:
  serviceName: bytesafe-ce
  replicas: 1
  selector:
    matchLabels:
      app: bytesafe-ce
  template:
    metadata:
      labels:
        app: bytesafe-ce
    spec:
      volumes:
        - name: bytesafe-tmp
          emptyDir: {}
      containers:
        - name: bytesafe-ce
          image: bytesafe/bytesafe-ce:latest
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: bytesafe-tmp
              mountPath: /tmp
            - name: bytesafe-data
              mountPath: /var/lib/bytesafe/blobs
          env:
            - name: TELEMETRY_TAGS
              value: "k8s"
          envFrom:
            - configMapRef:
                name: bytesafe-config
            - secretRef:
                name: data-encryption-key
            - secretRef:
                name: smtp-password
                optional: true
            - secretRef:
                name: postgres-password


          args: ["--setupdb"]
          livenessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ping
              port: 8081
            initialDelaySeconds: 30
            periodSeconds: 10
  volumeClaimTemplates:
    - metadata:
        name: bytesafe-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---

apiVersion: v1
kind: Service
metadata:
  name: bytesafe-ce
  labels:
    app: bytesafe-ce
spec:
  type: LoadBalancer
  ports:
    - port: 8081
  selector:
    app: bytesafe-ce
