--
-- PostgreSQL database dump
--

-- Dumped from database version 13.5 (Debian 13.5-1.pgdg110+1)
-- Dumped by pg_dump version 14.1 (Debian 14.1-1.pgdg110+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: account_settings; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.account_settings (
    account_id text NOT NULL,
    tm timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    settings jsonb
);


ALTER TABLE public.account_settings OWNER TO postgres;

--
-- Name: accounts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.accounts (
    id text NOT NULL,
    creation_token text,
    closed timestamp with time zone,
    purged timestamp with time zone
);


ALTER TABLE public.accounts OWNER TO postgres;

--
-- Name: feedback; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.feedback (
    id text NOT NULL,
    account_id text NOT NULL,
    user_id text NOT NULL,
    type text NOT NULL,
    content jsonb,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public.feedback OWNER TO postgres;

--
-- Name: github_installations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.github_installations (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    account_id character varying(256) NOT NULL,
    installation_id character varying(256) NOT NULL,
    settings jsonb NOT NULL
);


ALTER TABLE public.github_installations OWNER TO postgres;

--
-- Name: iam_resources; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.iam_resources (
    account_id text NOT NULL,
    resource_type text NOT NULL,
    id text NOT NULL,
    meta jsonb,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public.iam_resources OWNER TO postgres;

--
-- Name: iam_roles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.iam_roles (
    account_id text NOT NULL,
    id text NOT NULL,
    description text NOT NULL,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);


ALTER TABLE public.iam_roles OWNER TO postgres;

--
-- Name: invites; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.invites (
    account_id text NOT NULL,
    token text NOT NULL,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    invite jsonb NOT NULL
);


ALTER TABLE public.invites OWNER TO postgres;

--
-- Name: issue_timelines; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.issue_timelines (
    account_id text NOT NULL,
    issue_id integer NOT NULL,
    event_id text NOT NULL,
    tm timestamp with time zone NOT NULL,
    event jsonb NOT NULL
);


ALTER TABLE public.issue_timelines OWNER TO postgres;

--
-- Name: issues; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.issues (
    account_id text NOT NULL,
    id integer NOT NULL,
    type text NOT NULL,
    correlation_key text NOT NULL,
    type_key text NOT NULL,
    tags text[] NOT NULL,
    status text NOT NULL,
    severity smallint NOT NULL,
    slug text NOT NULL,
    title text NOT NULL,
    description text NOT NULL,
    registry_id text,
    package_name text,
    package_version text,
    package_version_id text,
    repository_id text,
    details jsonb,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    closed_at timestamp with time zone,
    created_by text,
    root_event_id text,
    watchers text[] NOT NULL,
    linked_issues text[] NOT NULL,
    github_issues text[] NOT NULL,
    github_pull_requests text[] NOT NULL,
    assigned text,
    component_id text
);


ALTER TABLE public.issues OWNER TO postgres;

--
-- Name: license_policies; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.license_policies (
    account_id text NOT NULL,
    id text NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    name text NOT NULL,
    description text NOT NULL,
    license_rules jsonb NOT NULL,
    no_match_severity integer NOT NULL,
    unknown_severity integer NOT NULL,
    missing_severity integer NOT NULL
);


ALTER TABLE public.license_policies OWNER TO postgres;

--
-- Name: login_password; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.login_password (
    account_id text NOT NULL,
    user_id text NOT NULL,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    email text NOT NULL,
    password text NOT NULL
);


ALTER TABLE public.login_password OWNER TO postgres;

--
-- Name: notifications; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notifications (
    account_id character varying(64) NOT NULL,
    user_id character varying(64) NOT NULL,
    notification_id character varying(64) NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    status text NOT NULL,
    source text,
    event_id text,
    issue_id text,
    tags text[],
    subject text NOT NULL,
    content jsonb NOT NULL,
    source_user_id character varying(64)
);


ALTER TABLE public.notifications OWNER TO postgres;

--
-- Name: package_hints; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.package_hints (
    id character varying(64) NOT NULL,
    account_id character varying(64) NOT NULL,
    registry_id character varying(64) NOT NULL,
    version_id character varying(64) NOT NULL,
    plugin_config_id character varying(64) NOT NULL,
    hint jsonb NOT NULL,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone
);


ALTER TABLE public.package_hints OWNER TO postgres;

--
-- Name: package_versions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.package_versions (
    account_id text NOT NULL,
    registry_id text NOT NULL,
    name text NOT NULL,
    version text NOT NULL,
    sha256 text NOT NULL,
    tags text[],
    is_internal boolean DEFAULT false,
    is_quarantined boolean DEFAULT false,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    deprecated text,
    type smallint DEFAULT 1 NOT NULL,
    files jsonb,
    quarantined_by text[],
    quarantined_ref jsonb,
    CONSTRAINT package_versions_type_check CHECK ((type > 0))
);


ALTER TABLE public.package_versions OWNER TO postgres;

--
-- Name: plugin_configs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.plugin_configs (
    account_id text NOT NULL,
    registry_id text NOT NULL,
    config_id text NOT NULL,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    config jsonb NOT NULL
);


ALTER TABLE public.plugin_configs OWNER TO postgres;

--
-- Name: registries; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.registries (
    account_id text NOT NULL,
    id text NOT NULL,
    name text NOT NULL,
    upstreams jsonb,
    description text,
    is_internal boolean DEFAULT false NOT NULL,
    is_archived boolean DEFAULT false NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    type smallint DEFAULT 1 NOT NULL,
    is_firewall boolean DEFAULT false NOT NULL,
    settings jsonb,
    CONSTRAINT registries_type_check CHECK ((type > 0))
);


ALTER TABLE public.registries OWNER TO postgres;

--
-- Name: sessions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sessions (
    id text NOT NULL,
    account_id text NOT NULL,
    user_id text NOT NULL,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    session jsonb NOT NULL
);


ALTER TABLE public.sessions OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    account_id text NOT NULL,
    user_id text NOT NULL,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "user" jsonb NOT NULL
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Data for Name: account_settings; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: accounts; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: feedback; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: github_installations; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: iam_resources; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: iam_roles; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: invites; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: issue_timelines; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: issues; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: license_policies; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: login_password; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: notifications; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: package_hints; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: package_versions; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: plugin_configs; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: registries; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: sessions; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--



--
-- Name: account_settings account_settings_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.account_settings
    ADD CONSTRAINT account_settings_pkey PRIMARY KEY (account_id);


--
-- Name: accounts accounts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts
    ADD CONSTRAINT accounts_pkey PRIMARY KEY (id);


--
-- Name: issues correlation_key_constraint; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.issues
    ADD CONSTRAINT correlation_key_constraint UNIQUE (account_id, correlation_key);


--
-- Name: feedback feedback_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.feedback
    ADD CONSTRAINT feedback_pkey PRIMARY KEY (id);


--
-- Name: github_installations github_installations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.github_installations
    ADD CONSTRAINT github_installations_pkey PRIMARY KEY (id);


--
-- Name: iam_resources iam_resources_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.iam_resources
    ADD CONSTRAINT iam_resources_pkey PRIMARY KEY (account_id, resource_type, id);


--
-- Name: iam_roles iam_roles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.iam_roles
    ADD CONSTRAINT iam_roles_pkey PRIMARY KEY (account_id, id);


--
-- Name: invites invites_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.invites
    ADD CONSTRAINT invites_pkey PRIMARY KEY (account_id, token);


--
-- Name: issue_timelines issue_timelines_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.issue_timelines
    ADD CONSTRAINT issue_timelines_pkey PRIMARY KEY (account_id, issue_id, event_id);


--
-- Name: issues issues_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.issues
    ADD CONSTRAINT issues_pkey PRIMARY KEY (account_id, id);


--
-- Name: license_policies license_policies_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.license_policies
    ADD CONSTRAINT license_policies_pkey PRIMARY KEY (account_id, id);


--
-- Name: login_password login_password_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.login_password
    ADD CONSTRAINT login_password_pkey PRIMARY KEY (account_id, user_id);


--
-- Name: notifications notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (account_id, user_id, notification_id);


--
-- Name: package_hints package_hints_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.package_hints
    ADD CONSTRAINT package_hints_pkey PRIMARY KEY (account_id, registry_id, id);


--
-- Name: package_versions package_versions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.package_versions
    ADD CONSTRAINT package_versions_pkey PRIMARY KEY (account_id, registry_id, name, version);


--
-- Name: plugin_configs plugin_configs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.plugin_configs
    ADD CONSTRAINT plugin_configs_pkey PRIMARY KEY (account_id, registry_id, config_id);


--
-- Name: registries registries_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.registries
    ADD CONSTRAINT registries_pkey PRIMARY KEY (account_id, id);


--
-- Name: sessions sessions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sessions
    ADD CONSTRAINT sessions_pkey PRIMARY KEY (id, account_id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (account_id, user_id);


--
-- Name: account_user_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX account_user_idx ON public.feedback USING btree (account_id, user_id, type);


--
-- Name: github_installations_ids_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX github_installations_ids_idx ON public.github_installations USING btree (account_id, installation_id);


--
-- Name: license_policies_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX license_policies_idx ON public.license_policies USING btree (account_id);


--
-- Name: login_password_email_index; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX login_password_email_index ON public.login_password USING btree (account_id, email);


--
-- Name: notification_user_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX notification_user_idx ON public.notifications USING btree (account_id, user_id);


--
-- Name: package_hints_ids_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX package_hints_ids_idx ON public.package_hints USING btree (account_id, registry_id, plugin_config_id, version_id);


--
-- Name: registries_name_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX registries_name_idx ON public.registries USING btree (account_id, name);


--
-- Name: session_account_id_index; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX session_account_id_index ON public.sessions USING btree (account_id);


--
-- Name: user_account_id_index; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_account_id_index ON public.users USING btree (account_id);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
GRANT USAGE ON SCHEMA public TO PUBLIC;
GRANT USAGE ON SCHEMA public TO readonly;
GRANT ALL ON SCHEMA public TO readwrite;


--
-- Name: TABLE account_settings; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.account_settings TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.account_settings TO readwrite;


--
-- Name: TABLE accounts; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.accounts TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.accounts TO readwrite;


--
-- Name: TABLE feedback; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.feedback TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.feedback TO readwrite;


--
-- Name: TABLE github_installations; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.github_installations TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.github_installations TO readwrite;


--
-- Name: TABLE iam_resources; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.iam_resources TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.iam_resources TO readwrite;


--
-- Name: TABLE iam_roles; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.iam_roles TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.iam_roles TO readwrite;


--
-- Name: TABLE invites; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.invites TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.invites TO readwrite;


--
-- Name: TABLE issue_timelines; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.issue_timelines TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.issue_timelines TO readwrite;


--
-- Name: TABLE issues; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.issues TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.issues TO readwrite;


--
-- Name: TABLE license_policies; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.license_policies TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.license_policies TO readwrite;


--
-- Name: TABLE login_password; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.login_password TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.login_password TO readwrite;


--
-- Name: TABLE notifications; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.notifications TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.notifications TO readwrite;


--
-- Name: TABLE package_hints; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.package_hints TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.package_hints TO readwrite;


--
-- Name: TABLE package_versions; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.package_versions TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.package_versions TO readwrite;


--
-- Name: TABLE plugin_configs; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.plugin_configs TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.plugin_configs TO readwrite;


--
-- Name: TABLE registries; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.registries TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.registries TO readwrite;


--
-- Name: TABLE sessions; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.sessions TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.sessions TO readwrite;


--
-- Name: TABLE users; Type: ACL; Schema: public; Owner: postgres
--

GRANT SELECT ON TABLE public.users TO readonly;
GRANT SELECT,INSERT,DELETE,UPDATE ON TABLE public.users TO readwrite;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT USAGE ON SEQUENCES  TO readwrite;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT SELECT ON TABLES  TO readonly;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT SELECT,INSERT,DELETE,UPDATE ON TABLES  TO readwrite;


--
-- PostgreSQL database dump complete
--

